</div>
<!-- /page content -->

<!-- footer content -->
<footer>
  <div class="pull-right">
    Baotm 2019 - Admin Template
  </div>
  <div class="clearfix"></div>
</footer>
<!-- /footer content -->
</div>
</div>

<!-- jQuery -->
<script src="../vendors/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap -->
<script src="../vendors/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<!-- FastClick -->
<script src="../vendors/fastclick/lib/fastclick.js"></script>
<!-- NProgress -->
<script src="../vendors/nprogress/nprogress.js"></script>

<!-- Custom Theme Scripts -->
<script src="../build/js/custom.js"></script>

</body>


<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>

<script>
var lamtron = 10000;
var last_query = {
ten: "",
sodienthoai: "",
sotien: 0,
tienno: 0,
ghichu: "",
laixuat: 0,
id: 0
}
var new_query = "";
var table = $('#table_id').DataTable({
"ajax": '/ajax_pawn_item_get_all',
"columns": [
{ "data": "id" },
{ "data": "ten" },
{
  "data": function (d) {
    _a = formatNumber(d.sotien.toString());
    return _a;
  }
},
{
  "data": function (d) {
    _a = JSON.parse(d.mondo);
    str = _a.loaihang;
    return str;
  }
},
{ "data": "ngaycam" },
{ "data": "trinhtrang" }, { "data": "laixuat" },
{
  "data": function (d) {
    _date = d.ngaycam.split('/');
    var d1 = new Date();
    d1.setMonth(d1.getMonth() + 1);
    var d2 = new Date(_date[2], (parseInt(_date[1])), _date[0])
    const diffTime = Math.abs(d2 - d1);
    const diffDays = (Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
    return diffDays;
  }
},
{
  "data": function (d) {
    _date = d.ngaycam.split('/');
    var d1 = new Date();
    d1.setMonth(d1.getMonth() + 1);
    var d2 = new Date(_date[2], (parseInt(_date[1])), _date[0])
    const diffTime = Math.abs(d2 - d1);
    const diffDays = (Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
    tienlai = diffDays * (parseInt(d.laixuat) / 30) * parseInt(d.sotien) / 100;
    tienlai = Math.round(tienlai / 1000) * 1000;
    if (tienlai < lamtron) {
      return (formatNumber(lamtron.toString()));
    }
    return (formatNumber(tienlai.toString()));
  }
},
{
  "data": function (d) {
    id = d.id;
    strUpdate = '<i onclick="dongLai(this)" data-id="' + id + '" class="fa fa-arrow-circle-o-up fa-2x update" title="đóng lãi" aria-hidden="true"></i>&nbsp;&nbsp';
    strChuoc = '<i onclick="chuocDo(this)" data-id="' + id + '" class="fa fa-money fa-2x chuoc" title="Chuộc" aria-hidden="true"></i>&nbsp;&nbsp;';
    strMenu = '<i onclick="menu_click(this)" data-id="' + id + '" class="fa fa-bars fa-2x menu" aria-hidden="true"></i>';

    return strUpdate + strChuoc + strMenu;
  }
}
]
});

function dongLai(a) {

id = a.dataset["id"];
_yes = confirm("Bạn muốn đóng lãi món đồ mã số " + id);
if (!_yes) {
return;
}
$("#cover").show();
b = table.data();
info = function () {
for (i = 0; i < b.length; i++) {
  _id = b[i].id;
  if (_id == id) {
    return {
      ngaycam: b[i].ngaycam,
      laixuat: b[i].laixuat,
      sotien: b[i].sotien
    }
  }
}
}();
_date = info.ngaycam.split('/');
var d1 = new Date();
var d2 = new Date(_date[2], (parseInt(_date[1])), _date[0])
const diffTime = Math.abs(d2 - d1);
const diffDays = (Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
tienlai = diffDays * parseInt(info.laixuat) / 30 * parseInt(info.sotien) / 100;

strDay = d1.getDate() + "/" + d1.getMonth() + "/" + d1.getFullYear();
//can id, ngaychuoc, tienlai
_url = "do_pawn_donglai?id=" + id + "&ngaydonglai=" + strDay + "&tienlai=" + tienlai + "&diff=" + diffDays;
console.log(_url);
$.ajax({
url: _url
}).done(function (data) {

_a = data.split('|');
id = _a[0];
tienlai = _a[1];
diff = _a[2];
alert('Đóng lãi Món đồ ' + id + ' Đã cầm : ' + diff + ' ngày Tiền lãi :' + formatNumber(tienlai.toString()))
table.ajax.reload();
$("#cover").hide();
});
}
function chuocDo(a) {
id = a.dataset["id"];
_yes = confirm("Bạn muốn chuộc món đồ mã số " + id);
if (!_yes) {
return;
}
$("#cover").show();
b = table.data();
info = function () {
for (i = 0; i < b.length; i++) {
  _id = b[i].id;
  if (_id == id) {
    return {
      ngaycam: b[i].ngaycam,
      laixuat: b[i].laixuat,
      sotien: b[i].sotien
    }
  }
}
}();
_date = info.ngaycam.split('/');
var d1 = new Date();
var d2 = new Date(_date[2], (parseInt(_date[1]) - 1), _date[0])
const diffTime = Math.abs(d2 - d1);
const diffDays = (Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
tienlai = (parseInt(diffDays) * parseInt(info.laixuat) * parseInt(info.sotien)) / 1000;
tienlai = Math.round(tienlai / 10000) * 1000;

strDay = d1.getDate() + "/" + d1.getMonth() + "/" + d1.getFullYear();
//can id, ngaychuoc, tienlai
_url = "do_pawn_chuocdo?id=" + id + "&ngaychuoc=" + strDay + "&tienlai=" + tienlai + "&diff=" + diffDays;
console.log(_url);
$.ajax({
url: _url
}).done(function (data) {
_a = data.split('|');
id = _a[0];
tienlai = _a[1];
diff = _a[2];
alert('Chuộc thành công Món đồ ' + id + ' Đã cầm :' + diff + ' ngày Tiền lãi :' + formatNumber(tienlai.toString()))
table.ajax.reload();
$("#cover").hide();
});
}
function saveChange() {
if ($("#lido").val() == "") {
alert('Vui lòng điền vào lí do');
return false;
}
var queryNew = "";
_yes = confirm("Bạn có chắc chắn muốn chỉnh sửa hay không");
if (_yes) {

//query string
//UPDATE `docam` SET `ten`=[value-2],`sodienthoai`=[value-3],`mondo`=[value-4],`sotien`=[value-5],`ngaycam`=[value-7],`ngaychuoc`=[value-8],`tienno`=[value-10],`laixuat`=[value-12],`ghichu`=[value-13] WHERE `id` = 
id = $("#info_id").text();
name = $("#info_name").text();
sodienthoai = $("#info_phone").text();
sotien = $("#info_money").text().replace(/,/g, '');
tienno = $("#info_id").text();
laixuat = $("#info_laixuat").text();
ghichu = $("#info_ghichu").text();

//update notification
queryNew = "UPDATE `docam` SET " +
  "`ten`= '" + name +
  "',`sodienthoai`='" + sodienthoai +
  "',`sotien`=" + sotien +
  ",`tienno`='" + tienno + "'" +
  ",`laixuat`='" + laixuat + "'" +
  ",`ghichu`=' " + ghichu + "'" +
  " WHERE `id` = " + id;
_url = "do_pawn_update?query=" + encodeURI(queryNew);
//call ajax to server
$.ajax({
  url: _url
}).done(function (data) {

});
d = new Date();
_dateStr = d.getDate() + "\\" + d.getMonth() + "\\" + d.getFullYear() + "-" + d.getSeconds() + "\\" + d.getMinutes() + "\\" + d.getHours();
_lastQuery = "UPDATE `docam` SET " +
  "`ten`= '" + last_query.name +
  "',`sodienthoai`='" + last_query.sodienthoai +
  "',`sotien`=" + last_query.sotien +
  ",`tienno`='" + last_query.tienno + "'" +
  ",`laixuat`='" + last_query.laixuat + "'" +
  ",`ghichu`=' " + last_query.ghichu + "'" +
  " WHERE `id` = " + last_query.id;

noti_info = {
  containt: $("#log").text(),
  date: _dateStr,
  lido: $("#lido").val(),
  accEdit: $("#div_username").text()
}
strQuery = "INSERT INTO `notification` (`id`, `containt`, `date`, `last_query`, `newquery`, `lido`,`accEdit`)" +
  " VALUES (NULL,'" + noti_info.containt + "','" + noti_info.date + "' , \"" + _lastQuery + "\", \"" + queryNew + "\", '" + noti_info.lido + "','" + noti_info.accEdit + "')";
_url1 = "do_pawn_notifi_insert?query=" + encodeURI(strQuery);
console.log(_url1);
$.ajax({
  url: _url1
}).done(function (data) {
  alert('Update Xong')
  $('.bs-example-modal-lg').modal('hide');
  $("#log").html("");
  $("#lido").val("");
  table.ajax.reload();
});
} else {

}
}
var accountName = "<br/> <span class='txt_decor'><%= acc_name %></span> : ";
$.fn.inlineEdit = function (replaceWith, connectWith) {

$(this).hover(function () {
$(this).addClass('hover');
}, function () {
$(this).removeClass('hover');
});


$(this).click(function () {

var elem = $(this);

elem.hide();
elem.after(replaceWith);
replaceWith.focus();
replaceWith.click(function () {
  $(this).remove();
  elem.show();
  return;
});
replaceWith.keypress(function (event) {

  if (event.keyCode == 13) {
    _oldVal = elem.text();
    _newVal = $(this).val();
    //get data-name 

    _data_name = elem[0].dataset["name"];

    if (_newVal == "") {
      //khong thay doi, lay lai gia tri cu
      $(this).remove();
      elem.show();
      return;
    }
    switch (_data_name) {

      case "name": {
        _yes = confirm("Bạn muốn đổi Tên người cầm  [" + _oldVal + "] Thành [" + _newVal + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text($(this).val());
            last_query.name = _oldVal;
            log_update += "<p>" + accountName + " Đã Đổi tên " + _oldVal + " Thành " + _newVal + "</span>";
          }
          $(this).remove();
          elem.show();
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      case "tienno": {
        _yes = confirm("Bạn muốn đổi Tiền nợ  [" + _oldVal + "] Thành [" + _newVal + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text(formatNumber(_newVal.toString()));
          }
          $(this).remove();
          elem.show();
          last_query.tienno = _oldVal;
          log_update += "<span>" + accountName + " Đã Đổi tiền nợ " + _oldVal + " Thành " + formatNumber(_newVal.toString()) + "</span>";
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      case "ghichu": {
        _yes = confirm("Bạn muốn đổi ghi chú  [" + _oldVal + "] Thành [" + _newVal + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text($(this).val());
          }
          $(this).remove();
          elem.show();
          last_query.ghichu = _oldVal;
          log_update += "<span>" + accountName + " Đã Đổi ghi chú " + _oldVal + " Thành " + _newVal + "</span>";
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      case "phone": {
        _yes = confirm("Bạn muốn đổi điện thoại người cầm  [" + _oldVal + "] Thành [" + _newVal + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text($(this).val());
          }
          $(this).remove();
          elem.show();
          last_query.sodienthoai = _oldVal;
          log_update += "<span>" + accountName + " Đã Đổi số điện thoại " + _oldVal + " Thành " + _newVal + "</span>";
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      case "money": {
        _yes = confirm("Bạn muốn đổi số tiền [" + _oldVal + "] Thành [" + formatNumber(_newVal.toString()) + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text(formatNumber(_newVal.toString()));
            last_query.sotien = _oldVal;
            log_update += "<span>" + accountName + " Đã Đổi Số tiền " + _oldVal + " Thành " + formatNumber(_newVal.toString()) + "</span>";
          }
          $(this).remove();
          elem.show();
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      case "laixuat": {
        _yes = confirm("Bạn muốn đổi lãi xuất [" + _oldVal + "] Thành [" + formatNumber(_newVal.toString()) + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text((_newVal.toString()));
            last_query.laixuat = _oldVal;
            log_update += "<span>" + accountName + " Đã Đổi lãi xuất " + _oldVal + " Thành " + (_newVal.toString()) + "</span>";
          }
          $(this).remove();
          elem.show();
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
      default: {
        _yes = confirm("Bạn muốn thay [" + _oldVal + "] Thành [" + formatNumber(_newVal.toString()) + "]")
        if (_yes) {
          if ($(this).val() != "") {
            connectWith.val($(this).val()).change();
            elem.text((_newVal.toString()));

            log_update += "<span>" + accountName + " Đã Đổi " + _oldVal + " Thành " + (_newVal.toString()) + "</span>";
          }
          $(this).remove();
          elem.show();
        } else {
          $(this).remove();
          elem.show();
        }
      } break;
    }

    $("#log").html(log_update);
    replaceWith.val("")
  }
})
});
};
var log_update = "Món đồ mã số ";
</script>

<script>

function formatNumber(n) {
// format number 1000000 to 1,234,567
return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}
function show(id) {
a = id;
var query = $('#' + a);
// check if element is Visible
var isVisible = query.is(':visible');
if (isVisible === true) {
// element is Visible
$("#" + a).hide();
$("#i" + a).show();
} else {
// element is Hidden
$("#" + a).show();
$("#i" + a).hide();
}
}
$(document).ready(function () {
__str = '<input type="text" class="form-control"></div>';
var replaceWith = $(__str);
connectWith = $('input[name="hiddenField"]');

$('.edit').inlineEdit(replaceWith, connectWith);


$('#table_id tbody').on('click', 'tr', function () {
if ($(this).hasClass('selected')) {
  $(this).removeClass('selected');
}
else {
  table.$('tr.selected').removeClass('selected');
  $(this).addClass('selected');
}
});



});
idMondo = 0;
function menu_click(a) {
log_update = "Món đồ mã số ";
DataId = a.dataset.id;
_url = "ajax_pawn_item_get?id=" + DataId;
//blur screen
$("#cover").show();
$.ajax({
url: _url
}).done(function (data) {
//data for modal
info = data[0];
idMondo = info.id;
log_update += idMondo;

_a = JSON.parse(info.mondo);
$('#modal_title').html('Thông Tin Cho Mã Đồ :' + info.id);

$('#modal_id').text(info.id);

$("#info_id").text(info.id);
$("#info_name").text(info.ten);
$("#info_money").text(formatNumber(info.sotien.toString()));
$("#info_phone").text(info.sodienthoai);
$("#info_mondo_name").text(_a.name);
$("#info_mondo_color").text(_a.color);
$("#info_mondo_url").attr('src', "image_pawn/" + info.hinhanh + ".png");
if (_a.loaihang == "Xe máy") {
  //info_mondo_bienso_li
  $("#info_mondo_bienso_li").show();
  $("#info_mondo_bienso").text(_a.bienso);
} else {
  $("#info_mondo_bienso_li").hide()
}

$("#info_ngaythe").text(info.ngaycam);
$("#info_ngaytoihan").text(info.ngaychuoc);
$("#info_laixuat").text(info.laixuat);
//

_date = info.ngaycam.split('/');
var d1 = new Date();
var d2 = new Date(_date[2], (parseInt(_date[1]) - 1), _date[0])
const diffTime = Math.abs(d2 - d1);
const diffDays = (Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
tienlai = (parseInt(diffDays) * parseInt(info.laixuat) * parseInt(info.sotien)) / 1000;

$("#info_tienlai").text(formatNumber(tienlai.toString()));

$("#info_sale").text(_a.sale);
$("#info_cmnd").text(_a.cmnd);
$("#info_cmnd_date").text(_a.cmnd_date);
$("#info_tinhtrang").text(info.trinhtrang);
$("#info_tienno").text(info.tienno);
$("#info_ghichu").text(info.ghichu);

last_query.id = info.id;
last_query.name = info.ten;
last_query.sodienthoai = info.sodienthoai;
last_query.tienno = info.tienno;
last_query.laixuat = info.laixuat;
last_query.sotien = info.sotien;
last_query.ghichu = info.ghichu;

$('.bs-example-modal-lg').modal(); $("#cover").hide();
});

}


</script>


</html>